 $ Running output-check.js
------- Testing console methods for basic functionality -------
 --- console.assert(true, "should not be logged");
 --- console.assert(false, "Failed assertion logged.", "one", "two", 3);
 --- console.assert(console.assert(true) == undefined);
 --- console.log("does this appear?");
does this appear?
 --- console.group("foo");
foo
     --- console.log("should not appear");
    should not appear
     --- console.clear();
[1;1H[0J --- console.debug("debug");
debug
 --- console.error("error");
 --- console.info("info");
info
 --- console.log("log");
log
 --- console.warn("warn");
 --- console.groupEnd();
 --- tracedfoo();
 --- console.dir(["dir", 2]);
[ "dir", 2 ]
 --- console.dirxml([1,2], "default", null);
[ 1, 2 ]
 --- console.group("bar");
bar
     --- console.groupCollapsed("baz");
    baz
         --- console.groupEnd();
     --- console.groupEnd();
------- Testing formatter -------
 --- console.log("%f", 23);
23
 --- console.log('bjoern and robert are born on the %fst dec', 1.234);
bjoern and robert are born on the 1.234st dec
 --- console.log("%f", null);
NaN
 --- console.log("%d", null);
NaN
 --- console.log('bjoern and robert are born on the %dst dec', "foo");
bjoern and robert are born on the NaNst dec
 --- console.log("%s %snewword", "duck");
duck %snewword
 --- console.assert(false, "robert keeps %s on his balcony", "plaices");
 --- console.assert(false, "robert keeps %s on his balcony", {foo: "bar"});
------- Testing console.count -------
 --- console.count();
default: 1
 --- console.countReset("default");
 --- console.count("default");
default: 1
 --- console.count('foo');
foo: 1
 --- console.count('foo');
foo: 2
 --- console.count({});
[object Object]: 1
 --- console.count([]);
: 1
 --- console.count();
default: 2
 --- console.count("");
: 2
 --- console.count(null);
null: 1
 --- console.count(undefined);
default: 3
------- Testing console.time -------
 --- console.time();
 --- console.time(undefined);
 --- console.time(null);
------- Testing console.timeLog -------
 --- console.timeLog();
default: 1ms
 --- console.timeLog(undefined);
default: 1ms
 --- console.timeLog(null);
null: 0ms
------- Testing console.timeEnd -------
 --- console.timeEnd();
default: 1ms
 --- console.timeEnd(null);
null: 0ms
 --- console.timeEnd(undefined);
 --- Finish testing console.time
------- Testing console.table -------
 --- console.table("the plaice living on the balcony");
the plaice living on the balcony
 --- console.table(new Set([{name: "terin", owner: false}, {name: "robert", owner: false}, {name: "domenic", owner: true}]));
┌────────────┬───────────┬───────┐
│ (iter idx) │ name      │ owner │
├────────────┼───────────┼───────┤
│          0 │ "terin"   │ false │
│          1 │ "robert"  │ false │
│          2 │ "domenic" │ true  │
└────────────┴───────────┴───────┘
 --- console.table([[1, 2, 3, 4], [5, 6, 7, 8]], 2, 3);
 $ Running wpt4repl/console-count-logging-REPL-output.js
** Checking console.count
   It should contain four entries whose contents are:
   default: 1
   default: 2
   default: 3
   default: 4
   --- Test start --- 
default: 1
default: 2
default: 3
default: 4
   --- Test end --- 
 $ Running wpt4repl/console-countReset-logging-REPL-output.js
** Checking console.countReset
   It should contain entries whose contents are:
   default: 1
   default: 1
   default: 1
   default: 1
   default: 1
   default: 1
   default: 1
   default: 1
   a label: 1
   a label: 1
   [some warning message indicating that a count for label "b" does not exist]
   --- Test start --- 
default: 1
default: 1
default: 2
default: 1
default: 2
default: 1
default: 2
default: 1
a label: 1
a label: 2
   --- Test end --- 
 $ Running wpt4repl/console-log-shadowrealm-REPL-output.js
** Checking log in a new ShadowRealm
   It should contain one entry saying "test passed".
   --- Test start --- 
 $ Running wpt4repl/console-timing-logging-REPL-output.js
** Checking console timing methods
   It should contain entries whose contents are:
   default: <some time>
   default: <some time>
   default: <some time>
   default: <some time> extra data
   default: <some time>
   default: <some time>
   default: <some time> extra data
   default: <some time>
   default: <some time>
   default: <some time> extra data
   default: <some time>
   custom toString(): <some time>
   custom toString(): <some time> extra data
   custom toString(): <some time>
   a label: <some time>
   a label: <some time> extra data
   a label: <some time>
   [some warning message indicating that a timer for label "b" does not exist]
   --- Test start --- 
default: 0ms
default: 0ms
default: 0ms
default: 0ms extra data
default: 0ms
default: 0ms
default: 0ms extra data
default: 0ms
default: 0ms
default: 0ms extra data
default: 0ms
custom toString(): 0ms
custom toString(): 0ms extra data
custom toString(): 0ms
a label: 0ms
a label: 0ms extra data
a label: 0ms
   --- Test end --- 
 $ Running wpt4repl/console-number-format-specifiers-symbol-REPL-output.js
** Checking formatter and format specifiers
   It should contain 15 entries, each of which are:
   NaN
   --- Test start --- 
 $ Running wpt4repl/console-number-format-specifiers-symbol--deno-REPL-output.js
** Checking formatter and format specifiers
   It should contain 15 entries, each of which are:
   NaN
   --- Test start --- 
   --- Test using `for (let method ...)` --- 
Testing log
NaN
NaN
NaN
Testing dirxml
%i
%d
%f
Testing trace
Testing group
NaN
NaN
NaN
Testing groupCollapsed
NaN
NaN
NaN
   --- Test using `for (const method ...)` --- 
Testing log
NaN
NaN
NaN
Testing dirxml
%i
%d
%f
Testing trace
Testing group
NaN
NaN
NaN
Testing groupCollapsed
NaN
NaN
NaN
   --- Test end --- 
 $ Running wpt4repl/console-string-format-specifier-symbol-REPL-output.js
** Checking console string format specifier with Symbol
   It should contain five entries, each of which are:
   Symbol(description)
   --- Test start --- 
Symbol(description)
%s
Symbol(description)
Symbol(description)
   --- Test end --- 
 $ --------- Output tests completed.
