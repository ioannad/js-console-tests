 --- Adding downloads/0-output-check.log
Script modified; context reset.
------- Testing console methods for basic functionality -------
 --- console.assert(true, "should not be logged");
 --- console.assert(false, "Failed assertion logged.", "one", "two", 3);
Assertion failed: Failed assertion logged. one two 3
test_console_methods_basic @ worker.js:18
(anonymous) @ worker.js:229
 --- console.assert(console.assert(true) == undefined);
 --- console.log("does this appear?");
does this appear?
 --- console.group("foo");
foo
 --- console.log("should not appear");
should not appear
 --- console.clear();
console.clear() was prevented due to 'Preserve log'
 --- console.debug("debug");
debug
 --- console.error("error");
error
test_console_methods_basic @ worker.js:39
(anonymous) @ worker.js:229
 --- console.info("info");
info
 --- console.log("log");
log
 --- console.warn("warn");
warn
test_console_methods_basic @ worker.js:48
(anonymous) @ worker.js:229
 --- console.groupEnd();
 --- tracedfoo();
console.trace
tracedbar @ worker.js:59
tracedfoo @ worker.js:61
test_console_methods_basic @ worker.js:65
(anonymous) @ worker.js:229
 --- console.dir(["dir", 2]);
Array(2)
 --- console.dirxml([1,2], "default", null);
(2) [1, 2] 'default' null
 --- console.group("bar");
bar
 --- console.groupCollapsed("baz");
baz
------- Testing formatter -------
 --- console.log("%f", 23);
23
 --- console.log('bjoern and robert are born on the %fst dec', 1.234);
bjoern and robert are born on the 1.234st dec
 --- console.log("%f", null);
NaN
 --- console.log("%d", null);
NaN
 --- console.log('bjoern and robert are born on the %dst dec', "foo");
bjoern and robert are born on the NaNst dec
 --- console.log("%s %snewword", "duck");
duck %snewword
 --- console.assert(false, "robert keeps %s on his balcony", "plaices");
Assertion failed: robert keeps plaices on his balcony
test_formatter @ worker.js:118
(anonymous) @ worker.js:231
 --- console.assert(false, "robert keeps %s on his balcony", {foo: "bar"});
Assertion failed: robert keeps [object Object] on his balcony
test_formatter @ worker.js:122
(anonymous) @ worker.js:231
------- Testing console.count -------
 --- console.count();
default: 1
 --- console.countReset("default");
 --- console.count("default");
default: 1
 --- console.count('foo');
foo: 1
 --- console.count('foo');
foo: 2
 --- console.count({});
[object Object]: 1
 --- console.count([]);
1
 --- console.count();
default: 2
 --- console.count("");
1
 --- console.count(null);
null: 1
 --- console.count(undefined);
default: 3
------- Testing console.time -------
 --- console.time();
 --- console.time(undefined);
Timer 'default' already exists
test_console_timing @ worker.js:199
(anonymous) @ worker.js:233
 --- console.time(null);
------- Testing console.timeLog -------
 --- console.timeLog();
default: 0 ms
 --- console.timeLog(undefined);
default: 0 ms
 --- console.timeLog(null);
null: 0 ms
------- Testing console.timeEnd -------
 --- console.timeEnd();
default: 0 ms
 --- console.timeEnd(null);
null: 0 ms
 --- console.timeEnd(undefined);
Timer 'default' does not exist
test_console_timing @ worker.js:224
(anonymous) @ worker.js:233
------- Testing console.table -------
 --- console.table("the plaice living on the balcony");
the plaice living on the balcony
 --- console.table(new Set([{name: "terin", owner: false}, {name: "robert", owner: false}, {name: "domenic", owner: true}]));
(index)Value(index)Valuesize3Set(3)
 --- console.table([[1, 2, 3, 4], [5, 6, 7, 8]], 2, 3);
(index)0123(index)01230123415678Array(2)
---------------------------TEST END.
 --- Adding downloads/1-console-count-logging.log
Script modified; context reset.
** Checking console.count
   It should contain four entries whose contents are:
   default: 1
   default: 2
   default: 3
   default: 4
   --- Test start --- 
default: 1
default: 2
default: 3
default: 4
   --- Test end --- 
 --- Adding downloads/2-console-countReset-logging.log
Script modified; context reset.
** Checking console.countReset
   It should contain entries whose contents are:
   default: 1
   default: 1
   default: 1
   default: 1
   default: 1
   default: 1
   default: 1
   default: 1
   a label: 1
   a label: 1
   [some warning message indicating that a count for label "b" does not exist]
   --- Test start --- 
default: 1
default: 1
default: 2
default: 1
default: 2
default: 1
default: 2
default: 1
a label: 1
a label: 2
Count for 'b' does not exist
(anonymous) @ worker.js:37
   --- Test end --- 
 --- Adding downloads/3-console-log-shadowrealm.log
Uncaught (in response) ReferenceError: ShadowRealm is not defined
Script modified; context reset.
** Checking log in a new ShadowRealm
   It should contain one entry saying "test passed".
   --- Test start --- 
Uncaught ReferenceError: ShadowRealm is not defined
    at worker.js:7:12
(anonymous) @ worker.js:7
 --- Adding downloads/4-console-timing-logging.log
Script modified; context reset.
** Checking console timing methods
   It should contain entries whose contents are:
   default: <some time>
   default: <some time>
   default: <some time>
   default: <some time> extra data
   default: <some time>
   default: <some time>
   default: <some time> extra data
   default: <some time>
   default: <some time>
   default: <some time> extra data
   default: <some time>
   custom toString(): <some time>
   custom toString(): <some time> extra data
   custom toString(): <some time>
   a label: <some time>
   a label: <some time> extra data
   a label: <some time>
   [some warning message indicating that a timer for label "b" does not exist]
   --- Test start --- 
default: 0 ms
default: 0 ms
default: 0 ms
default: 0 ms extra data
default: 0 ms
default: 0 ms
default: 0 ms extra data
default: 0 ms
default: 0 ms
default: 0 ms extra data
default: 0 ms
custom toString(): 0 ms
custom toString(): 0 ms extra data
custom toString(): 0 ms
a label: 0 ms
a label: 0 ms extra data
a label: 0 ms
Timer 'b' does not exist
(anonymous) @ worker.js:60
Timer 'b' does not exist
(anonymous) @ worker.js:61
   --- Test end --- 
 --- Adding downloads/5-console-number-format-specifiers-symbol.log
Script modified; context reset.
** Checking formatter and format specifiers
   It should contain 15 entries, each of which are:
   NaN
   --- Test start --- 
   --- Testing log
NaN
NaN
NaN
   --- Testing dirxml
NaN
NaN
NaN
   --- Testing trace
NaN
(anonymous) @ worker.js:12
NaN
(anonymous) @ worker.js:14
NaN
(anonymous) @ worker.js:16
   --- Testing group
NaN
NaN
NaN
   --- Testing groupCollapsed
NaN
 --- Adding downloads/6-console-number-format-specifiers-symbol--deno.log
Script modified; context reset.
​ ** Checking formatter and format specifiers
​    It should contain 15 entries, each of which are:
​    NaN
​    --- Test start --- 
​    --- Test using `for (let method ...)` --- 
​ Testing log
​ NaN
​ NaN
​ NaN
​ Testing dirxml
​ NaN
​ NaN
​ NaN
​ Testing trace
NaN
(anonymous) @ worker.js:14
NaN
(anonymous) @ worker.js:16
NaN
(anonymous) @ worker.js:18
Testing group
NaN
NaN
NaN
Testing groupCollapsed
NaN
NaN
(anonymous) @ worker.js:26
NaN
(anonymous) @ worker.js:28
NaN
(anonymous) @ worker.js:30
Testing group
NaN
NaN
NaN
Testing groupCollapsed
NaN
NaN
 --- Adding downloads/7-console-string-format-specifier-on-symbol.log
Script modified; context reset.
** Checking console string format specifier with Symbol
   It should contain five entries, each of which are:
   Symbol(description)
   --- Test start --- 
Symbol(description)
Symbol(description)
Symbol(description)
(anonymous) @ worker.js:12
Symbol(description)
Symbol(description)
   --- Test end --- 
